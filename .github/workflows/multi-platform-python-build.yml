name: Multi-Platform Python Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]
      fail-fast: false
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Install CMake (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    - name: Install CMake (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake

    - name: Install CMake (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        refreshenv

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Set Python version and build (Python ${{ matrix.python-version }})
      shell: bash
      run: |
        echo "${{ matrix.python-version }}" > .python-version
        uv sync
        uv run maturin develop
        uv build

    - name: Commit changes for Python ${{ matrix.python-version }}
      shell: bash
      run: |
        git add .
        if ! git diff --cached --quiet; then
          git commit -m "Build artifacts for Python ${{ matrix.python-version }} on ${{ matrix.os }}" || echo "No changes to commit"
        else
          echo "No changes to commit for Python ${{ matrix.python-version }} on ${{ matrix.os }}"
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ matrix.os }}-python${{ matrix.python-version }}
        path: |
          dist/
          rust/target/wheels/
          .python-version
        retention-days: 30

    - name: Push changes (only on main branch)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      shell: bash
      run: |
        git push origin HEAD:${{ github.ref_name }} || echo "Push failed or no changes to push"

  summary:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Build Summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Platform | Python 3.11 | Python 3.12 | Python 3.13 |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|-------------|-------------|-------------|" >> $GITHUB_STEP_SUMMARY
        echo "| Ubuntu   | ${{ needs.build.result }} | ${{ needs.build.result }} | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Windows  | ${{ needs.build.result }} | ${{ needs.build.result }} | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| macOS    | ${{ needs.build.result }} | ${{ needs.build.result }} | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Build artifacts are available for download from the Actions tab." >> $GITHUB_STEP_SUMMARY
