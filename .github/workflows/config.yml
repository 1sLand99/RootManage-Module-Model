# This file is autogenerated by maturin v1.8.6
# To update, run
#
#    maturin generate-ci github
#
name: CI-CONFIG

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    defaults:
      run:
        working-directory: rmmbox/config
    strategy:
      matrix:        
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: aarch64          
          - runner: ubuntu-22.04
            target: armv7
          - runner: ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels        
        env:
          CARGO_BUILD_TARGET: ${{ matrix.platform.target == 'x86_64' && 'x86_64-unknown-linux-gnu' || matrix.platform.target == 'aarch64' && 'aarch64-unknown-linux-gnu' || matrix.platform.target == 'armv7' && 'armv7-unknown-linux-gnueabihf' || matrix.platform.target == 'ppc64le' && 'powerpc64le-unknown-linux-gnu' }}
        run: uv build --wheel
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}   
          path: rmmbox/config/dist
  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    defaults:
      run:
        working-directory: rmmbox/config
    strategy:
      matrix:        
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
            
    steps:      
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        env:
          CARGO_BUILD_TARGET: ${{ matrix.platform.target == 'x86_64' && 'x86_64-unknown-linux-musl' || matrix.platform.target == 'aarch64' && 'aarch64-unknown-linux-musl' || matrix.platform.target == 'armv7' && 'armv7-unknown-linux-musleabihf' }}
        run: uv build --wheel
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: rmmbox/config/dist
  windows:
    runs-on: ${{ matrix.platform.runner }}
    defaults:
      run:
        working-directory: rmmbox/config
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:      
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        env:
          CARGO_BUILD_TARGET: ${{ matrix.platform.target == 'x64' && 'x86_64-pc-windows-msvc' || matrix.platform.target == 'x86' && 'i686-pc-windows-msvc' }}
        run: uv build --wheel
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }} 
          path: rmmbox/config/dist
  macos:
    runs-on: ${{ matrix.platform.runner }}
    defaults:
      run:
        working-directory: rmmbox/config
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:      
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        env:
          CARGO_BUILD_TARGET: ${{ matrix.platform.target == 'x86_64' && 'x86_64-apple-darwin' || matrix.platform.target == 'aarch64' && 'aarch64-apple-darwin' }}
        run: uv build --wheel
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}   
          path: rmmbox/config/dist
  sdist:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rmmbox/config
    steps:      
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Build sdist
        run: uv build --sdist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: rmmbox/config/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'wheels-*/*'
