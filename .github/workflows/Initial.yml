name: initial

on:
  workflow_dispatch:
    inputs:
      id:
        description: '请输入模块id，例如Zygisk_shamiko'
        required: true
      
      name:
        description: '请输入模块名，例如shamiko'
        required: true

      author:
        description: '作者名'
        required: true

      description:
        description: '模块描述'
        required: true


jobs:
  init:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.0
        with:  
          ref: main  

      - name: init__module.prop
        run: |
          echo "" > MyModule/module.prop


      - name: Get Version
        id: get_version
        run: |
          echo "date=$(date +%Y%m%d)" >> "$GITHUB_ENV"
      - name: 获取仓库 URL
        id: get_repo_url
        run: |
          echo "repo_url=https://github.com/${{ github.repository }}" >> "$GITHUB_ENV"

      - name: Add the id key in the file
        run: |
          echo "id=${{ github.event.inputs.id }}" >> MyModule/module.prop
          echo "id=${{ github.event.inputs.id }}" >> $GITHUB_ENV
      - name: Add the name key in the file
        run: |
          echo "name=${{ github.event.inputs.name }}" >> MyModule/module.prop
          echo "name=${{ github.event.inputs.name }}" >> $GITHUB_ENV
      - name: Add the version key in the file
        run: |
          echo "version=0.0.1" >> MyModule/module.prop
          echo "version=0.0.1" >> $GITHUB_ENV
      - name: Add the version code key in the file
        run: |
          echo "versionCode=${{ env.date }}" >> MyModule/module.prop
          echo "versionCode=${{ env.date }}" >> $GITHUB_ENV
      - name: Add the author key in the file
        run: |
          echo "author=${{ github.event.inputs.author }}" >> MyModule/module.prop
          echo "author=${{ github.event.inputs.author }}" >> $GITHUB_ENV
      - name: Add the description key in the file
        run: |
          echo "description=${{ github.event.inputs.description }}" >> MyModule/module.prop
          echo "description=${{ github.event.inputs.description }}" >> $GITHUB_ENV

      - name: List files for debug
        run: ls -la

      - name: init__update.json
        run: |
          echo "" > update.json
          cat <<EOF > update.json
          {
            "version": "${{ env.version }}",
            "versionCode": "${{ env.date }}",
            "zipUrl": "${{ env.repo_url }}/releases/download/${{ env.version }}/${{ env.name }}-${{ env.version }}-${{ env.versionCode }}-by${{ env.author }}.zip",
            "changelog": "${{ env.repo_url }}/raw/main/CHANGELOG.md"
          }
          EOF

      - name: init__CHANGELOG.md
        run: |
          echo "" > CHANGELOG.md
          cat <<EOF > CHANGELOG.md
          v0.0.0诞生了！
          模块作者是${{ github.event.inputs.author }}
          模块名字是${{ github.event.inputs.name }}
          模块id是id是${{ github.event.inputs.id }}
          模块的作用是${{ github.event.inputs.description }}
          此后的更新日志需要自己编辑CHANGGELOG.md！（记得把这一行删了）

          EOF


      - name: Debugging Output
        run: |
          git status
          git log -1


      - name: Commit changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add .
          git commit -m "Rename module folder to MyModule and update module.prop"
          git push origin main

      - name: Package module
        run: |
          # 打包模块
          zip -r "${{ env.name }}-${{ env.version }}-${{ env.versionCode }}-by${{ env.author }}.zip" *

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          files: |
            ${{ env.name }}-${{ env.version }}-${{ env.versionCode }}-by${{ env.author }}.zip
          generate_release_notes: true
          fail_on_unmatched_files: false  # 如果文件匹配失败不会导致工作流失败
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
